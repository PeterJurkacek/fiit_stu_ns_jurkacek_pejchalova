I1130 01:00:43.213418 140244437493568 logger.py:38] LOGGING START. Data are saving to logs_dir: /labs/logs/experiment_1_trainable_false, models_dir: /labs/models/experiment_1_trainable_false
I1130 01:00:43.213535 140244437493568 logger.py:39] log_file_name:file:///labs/logs/experiment_1_trainable_false/runtime.log.44b2edfae0fd.root.log.INFO.20191130-010043.22
I1130 01:00:43.213624 140244437493568 utils.py:103] Greyscale: False
I1130 01:00:43.496307 140244437493568 utils.py:49] dirs: ['O', 'R'], from: /labs/data/raw/DATASET/TRAIN
I1130 01:00:43.496505 140244437493568 load_dataset.py:22] DataInfo => dir_path: /labs/data/raw/DATASET/TRAIN, count: 22564, cache_file_path: /labs/data/processed/experiment_1_trainable_false/DATASETTRAIN.tfcache
I1130 01:00:43.520315 140244437493568 utils.py:49] dirs: ['O', 'R'], from: /labs/data/raw/DATASET/TEST
I1130 01:00:43.520432 140244437493568 load_dataset.py:22] DataInfo => dir_path: /labs/data/raw/DATASET/TEST, count: 2513, cache_file_path: /labs/data/processed/experiment_1_trainable_false/DATASETTEST.tfcache
I1130 01:00:43.520515 140244437493568 utils.py:108] Number of channels: 3
I1130 01:00:45.067986 140244437493568 load_dataset.py:105] batch_size:64
BatchInfo => Count of images in one batch:64
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
I1130 01:00:46.314155 140244437493568 load_dataset.py:105] batch_size:64
BatchInfo => Count of images in one batch:64
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([False,  True]) -> array(['O'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
One image Shape:  (224, 224, 3)
Label:  array([ True, False]) -> array(['R'], dtype='<U1')
I1130 01:00:47.354191 140244437493568 main.py:27] input_shape:(224, 224, 3)
I1130 01:00:47.354411 140244437493568 main.py:29] number_of_classes:2
I1130 01:00:47.354508 140244437493568 utils.py:72] steps_per_epoch: 352
I1130 01:00:47.354583 140244437493568 utils.py:73] total_num_of_samples: 22564
I1130 01:00:47.354652 140244437493568 utils.py:74] batch_size: 64
I1130 01:00:47.354723 140244437493568 utils.py:72] steps_per_epoch: 39
I1130 01:00:47.354789 140244437493568 utils.py:73] total_num_of_samples: 2513
I1130 01:00:47.354854 140244437493568 utils.py:74] batch_size: 64
I1130 01:00:53.687267 140244437493568 layer_utils.py:165] Model: "sequential"
I1130 01:00:53.687462 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 01:00:53.687555 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 01:00:53.687631 140244437493568 layer_utils.py:168] =================================================================
I1130 01:00:53.696363 140244437493568 layer_utils.py:163] mobilenetv2_1.00_224 (Model) (None, 7, 7, 1280)        2257984   
I1130 01:00:53.696487 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 01:00:53.696614 140244437493568 layer_utils.py:163] flatten (Flatten)            (None, 62720)             0         
I1130 01:00:53.696695 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 01:00:53.696885 140244437493568 layer_utils.py:163] dense (Dense)                (None, 1000)              62721000  
I1130 01:00:53.696969 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 01:00:53.697136 140244437493568 layer_utils.py:163] dense_1 (Dense)              (None, 2)                 2002      
I1130 01:00:53.697217 140244437493568 layer_utils.py:230] =================================================================
I1130 01:00:53.709148 140244437493568 layer_utils.py:242] Total params: 64,980,986
I1130 01:00:53.709274 140244437493568 layer_utils.py:243] Trainable params: 62,723,002
I1130 01:00:53.709356 140244437493568 layer_utils.py:244] Non-trainable params: 2,257,984
I1130 01:00:53.709428 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 01:00:53.709508 140244437493568 simple_trainer.py:27] model.compile()
I1130 01:00:53.709582 140244437493568 simple_trainer.py:28] loss:categorical_crossentropy
I1130 01:00:53.709650 140244437493568 simple_trainer.py:29] optimizer:adam
I1130 01:00:54.260259 140244437493568 simple_trainer.py:40] model.fit()
I1130 01:00:54.260466 140244437493568 simple_trainer.py:41] run_id: mobilenet_model
I1130 01:00:54.260561 140244437493568 simple_trainer.py:42] epochs:10
I1130 01:00:54.260639 140244437493568 simple_trainer.py:43] steps_per_epoch:352
I1130 01:00:54.260715 140244437493568 simple_trainer.py:44] validation_steps:39
I1130 02:37:57.115215 140244437493568 simple_trainer.py:57] Model mobilenet_model saved to model_path: /labs/models/experiment_1_trainable_false/model_mobilenet_model.h5
I1130 02:37:57.116773 140244437493568 simple_trainer.py:61] model.evaluate()
I1130 02:37:57.116871 140244437493568 simple_trainer.py:62] run_id: mobilenet_model
I1130 02:37:57.117140 140244437493568 simple_trainer.py:63] test_data: <DatasetV1Adapter shapes: ((None, 224, 224, 3), (None, 2)), types: (tf.float32, tf.bool)>
I1130 02:37:57.117233 140244437493568 simple_trainer.py:64] steps: 2513
I1130 02:38:06.628037 140244437493568 simple_trainer.py:67] model was loaded from/labs/models/experiment_1_trainable_false/model_mobilenet_model.h5
I1130 02:38:06.628271 140244437493568 layer_utils.py:165] Model: "sequential"
I1130 02:38:06.628356 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 02:38:06.628442 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 02:38:06.628512 140244437493568 layer_utils.py:168] =================================================================
I1130 02:38:06.637639 140244437493568 layer_utils.py:163] mobilenetv2_1.00_224 (Model) (None, 7, 7, 1280)        2257984   
I1130 02:38:06.637745 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:38:06.637883 140244437493568 layer_utils.py:163] flatten (Flatten)            (None, 62720)             0         
I1130 02:38:06.637973 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:38:06.638151 140244437493568 layer_utils.py:163] dense (Dense)                (None, 1000)              62721000  
I1130 02:38:06.638230 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:38:06.638392 140244437493568 layer_utils.py:163] dense_1 (Dense)              (None, 2)                 2002      
I1130 02:38:06.638469 140244437493568 layer_utils.py:230] =================================================================
I1130 02:38:06.650445 140244437493568 layer_utils.py:242] Total params: 64,980,986
I1130 02:38:06.650556 140244437493568 layer_utils.py:243] Trainable params: 62,723,002
I1130 02:38:06.650633 140244437493568 layer_utils.py:244] Non-trainable params: 2,257,984
I1130 02:38:06.650703 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 02:47:35.334896 140244437493568 layer_utils.py:165] Model: "sequential_1"
I1130 02:47:35.335096 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 02:47:35.335189 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 02:47:35.335278 140244437493568 layer_utils.py:168] =================================================================
I1130 02:47:35.336336 140244437493568 layer_utils.py:163] vgg16 (Model)                (None, 7, 7, 512)         14714688  
I1130 02:47:35.336433 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:47:35.336549 140244437493568 layer_utils.py:163] flatten_1 (Flatten)          (None, 25088)             0         
I1130 02:47:35.336653 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:47:35.336822 140244437493568 layer_utils.py:163] dense_2 (Dense)              (None, 1000)              25089000  
I1130 02:47:35.336938 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 02:47:35.337120 140244437493568 layer_utils.py:163] dense_3 (Dense)              (None, 2)                 2002      
I1130 02:47:35.337227 140244437493568 layer_utils.py:230] =================================================================
I1130 02:47:35.338883 140244437493568 layer_utils.py:242] Total params: 39,805,690
I1130 02:47:35.338977 140244437493568 layer_utils.py:243] Trainable params: 25,091,002
I1130 02:47:35.339052 140244437493568 layer_utils.py:244] Non-trainable params: 14,714,688
I1130 02:47:35.339121 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 02:47:35.339194 140244437493568 simple_trainer.py:27] model.compile()
I1130 02:47:35.339277 140244437493568 simple_trainer.py:28] loss:categorical_crossentropy
I1130 02:47:35.339346 140244437493568 simple_trainer.py:29] optimizer:adam
I1130 02:47:35.828165 140244437493568 simple_trainer.py:40] model.fit()
I1130 02:47:35.828389 140244437493568 simple_trainer.py:41] run_id: vgg16_model
I1130 02:47:35.829805 140244437493568 simple_trainer.py:42] epochs:10
I1130 02:47:35.829920 140244437493568 simple_trainer.py:43] steps_per_epoch:352
I1130 02:47:35.829997 140244437493568 simple_trainer.py:44] validation_steps:39
I1130 04:08:16.327455 140244437493568 simple_trainer.py:57] Model vgg16_model saved to model_path: /labs/models/experiment_1_trainable_false/model_vgg16_model.h5
I1130 04:08:16.329213 140244437493568 simple_trainer.py:61] model.evaluate()
I1130 04:08:16.329313 140244437493568 simple_trainer.py:62] run_id: vgg16_model
I1130 04:08:16.329567 140244437493568 simple_trainer.py:63] test_data: <DatasetV1Adapter shapes: ((None, 224, 224, 3), (None, 2)), types: (tf.float32, tf.bool)>
I1130 04:08:16.329650 140244437493568 simple_trainer.py:64] steps: 2513
I1130 04:08:18.608655 140244437493568 simple_trainer.py:67] model was loaded from/labs/models/experiment_1_trainable_false/model_vgg16_model.h5
I1130 04:08:18.608889 140244437493568 layer_utils.py:165] Model: "sequential_1"
I1130 04:08:18.608977 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 04:08:18.609061 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 04:08:18.609133 140244437493568 layer_utils.py:168] =================================================================
I1130 04:08:18.610202 140244437493568 layer_utils.py:163] vgg16 (Model)                (None, 7, 7, 512)         14714688  
I1130 04:08:18.610301 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:08:18.610437 140244437493568 layer_utils.py:163] flatten_1 (Flatten)          (None, 25088)             0         
I1130 04:08:18.610517 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:08:18.610694 140244437493568 layer_utils.py:163] dense_2 (Dense)              (None, 1000)              25089000  
I1130 04:08:18.610805 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:08:18.611026 140244437493568 layer_utils.py:163] dense_3 (Dense)              (None, 2)                 2002      
I1130 04:08:18.611105 140244437493568 layer_utils.py:230] =================================================================
I1130 04:08:18.612860 140244437493568 layer_utils.py:242] Total params: 39,805,690
I1130 04:08:18.612963 140244437493568 layer_utils.py:243] Trainable params: 25,091,002
I1130 04:08:18.613040 140244437493568 layer_utils.py:244] Non-trainable params: 14,714,688
I1130 04:08:18.613111 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 04:37:58.252287 140244437493568 layer_utils.py:165] Model: "sequential_2"
I1130 04:37:58.252509 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 04:37:58.252603 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 04:37:58.252721 140244437493568 layer_utils.py:168] =================================================================
I1130 04:37:58.274868 140244437493568 layer_utils.py:163] densenet121 (Model)          (None, 7, 7, 1024)        7037504   
I1130 04:37:58.274980 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:37:58.275118 140244437493568 layer_utils.py:163] flatten_2 (Flatten)          (None, 50176)             0         
I1130 04:37:58.275198 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:37:58.275386 140244437493568 layer_utils.py:163] dense_4 (Dense)              (None, 1000)              50177000  
I1130 04:37:58.275486 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 04:37:58.275653 140244437493568 layer_utils.py:163] dense_5 (Dense)              (None, 2)                 2002      
I1130 04:37:58.275733 140244437493568 layer_utils.py:230] =================================================================
I1130 04:37:58.306928 140244437493568 layer_utils.py:242] Total params: 57,216,506
I1130 04:37:58.307060 140244437493568 layer_utils.py:243] Trainable params: 50,179,002
I1130 04:37:58.307143 140244437493568 layer_utils.py:244] Non-trainable params: 7,037,504
I1130 04:37:58.307216 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 04:37:58.307293 140244437493568 simple_trainer.py:27] model.compile()
I1130 04:37:58.307368 140244437493568 simple_trainer.py:28] loss:categorical_crossentropy
I1130 04:37:58.307440 140244437493568 simple_trainer.py:29] optimizer:adam
I1130 04:37:58.925438 140244437493568 simple_trainer.py:40] model.fit()
I1130 04:37:58.925651 140244437493568 simple_trainer.py:41] run_id: densenet121_model
I1130 04:37:58.925751 140244437493568 simple_trainer.py:42] epochs:10
I1130 04:37:58.925826 140244437493568 simple_trainer.py:43] steps_per_epoch:352
I1130 04:37:58.925909 140244437493568 simple_trainer.py:44] validation_steps:39
I1130 05:54:09.951340 140244437493568 simple_trainer.py:57] Model densenet121_model saved to model_path: /labs/models/experiment_1_trainable_false/model_densenet121_model.h5
I1130 05:54:09.953677 140244437493568 simple_trainer.py:61] model.evaluate()
I1130 05:54:09.953771 140244437493568 simple_trainer.py:62] run_id: densenet121_model
I1130 05:54:09.954026 140244437493568 simple_trainer.py:63] test_data: <DatasetV1Adapter shapes: ((None, 224, 224, 3), (None, 2)), types: (tf.float32, tf.bool)>
I1130 05:54:09.954110 140244437493568 simple_trainer.py:64] steps: 2513
I1130 05:54:28.732559 140244437493568 simple_trainer.py:67] model was loaded from/labs/models/experiment_1_trainable_false/model_densenet121_model.h5
I1130 05:54:28.732804 140244437493568 layer_utils.py:165] Model: "sequential_2"
I1130 05:54:28.732896 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 05:54:28.732984 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 05:54:28.733054 140244437493568 layer_utils.py:168] =================================================================
I1130 05:54:28.755772 140244437493568 layer_utils.py:163] densenet121 (Model)          (None, 7, 7, 1024)        7037504   
I1130 05:54:28.755909 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 05:54:28.756046 140244437493568 layer_utils.py:163] flatten_2 (Flatten)          (None, 50176)             0         
I1130 05:54:28.756129 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 05:54:28.756315 140244437493568 layer_utils.py:163] dense_4 (Dense)              (None, 1000)              50177000  
I1130 05:54:28.756410 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 05:54:28.756603 140244437493568 layer_utils.py:163] dense_5 (Dense)              (None, 2)                 2002      
I1130 05:54:28.756684 140244437493568 layer_utils.py:230] =================================================================
I1130 05:54:28.786304 140244437493568 layer_utils.py:242] Total params: 57,216,506
I1130 05:54:28.786428 140244437493568 layer_utils.py:243] Trainable params: 50,179,002
I1130 05:54:28.786510 140244437493568 layer_utils.py:244] Non-trainable params: 7,037,504
I1130 05:54:28.786584 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 06:15:35.632139 140244437493568 layer_utils.py:165] Model: "sequential_3"
I1130 06:15:35.632373 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 06:15:35.632498 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 06:15:35.632573 140244437493568 layer_utils.py:168] =================================================================
I1130 06:15:35.642764 140244437493568 layer_utils.py:163] resnet50 (Model)             (None, 7, 7, 2048)        23587712  
I1130 06:15:35.642869 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 06:15:35.643004 140244437493568 layer_utils.py:163] flatten_3 (Flatten)          (None, 100352)            0         
I1130 06:15:35.643082 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 06:15:35.643296 140244437493568 layer_utils.py:163] dense_6 (Dense)              (None, 1000)              100353000 
I1130 06:15:35.643376 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 06:15:35.643532 140244437493568 layer_utils.py:163] dense_7 (Dense)              (None, 2)                 2002      
I1130 06:15:35.643608 140244437493568 layer_utils.py:230] =================================================================
I1130 06:15:35.657448 140244437493568 layer_utils.py:242] Total params: 123,942,714
I1130 06:15:35.657585 140244437493568 layer_utils.py:243] Trainable params: 100,355,002
I1130 06:15:35.657693 140244437493568 layer_utils.py:244] Non-trainable params: 23,587,712
I1130 06:15:35.657763 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 06:15:35.657838 140244437493568 simple_trainer.py:27] model.compile()
I1130 06:15:35.657935 140244437493568 simple_trainer.py:28] loss:categorical_crossentropy
I1130 06:15:35.658002 140244437493568 simple_trainer.py:29] optimizer:adam
I1130 06:15:36.185928 140244437493568 simple_trainer.py:40] model.fit()
I1130 06:15:36.186118 140244437493568 simple_trainer.py:41] run_id: resnet50_model
I1130 06:15:36.186212 140244437493568 simple_trainer.py:42] epochs:10
I1130 06:15:36.186285 140244437493568 simple_trainer.py:43] steps_per_epoch:352
I1130 06:15:36.186355 140244437493568 simple_trainer.py:44] validation_steps:39
I1130 07:32:42.590091 140244437493568 simple_trainer.py:57] Model resnet50_model saved to model_path: /labs/models/experiment_1_trainable_false/model_resnet50_model.h5
I1130 07:32:42.592899 140244437493568 simple_trainer.py:61] model.evaluate()
I1130 07:32:42.593006 140244437493568 simple_trainer.py:62] run_id: resnet50_model
I1130 07:32:42.593260 140244437493568 simple_trainer.py:63] test_data: <DatasetV1Adapter shapes: ((None, 224, 224, 3), (None, 2)), types: (tf.float32, tf.bool)>
I1130 07:32:42.593342 140244437493568 simple_trainer.py:64] steps: 2513
I1130 07:32:53.734386 140244437493568 simple_trainer.py:67] model was loaded from/labs/models/experiment_1_trainable_false/model_resnet50_model.h5
I1130 07:32:53.734640 140244437493568 layer_utils.py:165] Model: "sequential_3"
I1130 07:32:53.734726 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 07:32:53.734811 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 07:32:53.734881 140244437493568 layer_utils.py:168] =================================================================
I1130 07:32:53.746149 140244437493568 layer_utils.py:163] resnet50 (Model)             (None, 7, 7, 2048)        23587712  
I1130 07:32:53.746259 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 07:32:53.746404 140244437493568 layer_utils.py:163] flatten_3 (Flatten)          (None, 100352)            0         
I1130 07:32:53.746487 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 07:32:53.746665 140244437493568 layer_utils.py:163] dense_6 (Dense)              (None, 1000)              100353000 
I1130 07:32:53.746771 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 07:32:53.746945 140244437493568 layer_utils.py:163] dense_7 (Dense)              (None, 2)                 2002      
I1130 07:32:53.747024 140244437493568 layer_utils.py:230] =================================================================
I1130 07:32:53.761064 140244437493568 layer_utils.py:242] Total params: 123,942,714
I1130 07:32:53.761173 140244437493568 layer_utils.py:243] Trainable params: 100,355,002
I1130 07:32:53.761252 140244437493568 layer_utils.py:244] Non-trainable params: 23,587,712
I1130 07:32:53.761325 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 07:56:05.073552 140244437493568 simple_trainer.py:27] model.compile()
I1130 07:56:05.073791 140244437493568 simple_trainer.py:28] loss:categorical_crossentropy
I1130 07:56:05.073913 140244437493568 simple_trainer.py:29] optimizer:adam
I1130 07:56:05.567089 140244437493568 simple_trainer.py:40] model.fit()
I1130 07:56:05.567314 140244437493568 simple_trainer.py:41] run_id: cnn_model
I1130 07:56:05.567403 140244437493568 simple_trainer.py:42] epochs:10
I1130 07:56:05.567494 140244437493568 simple_trainer.py:43] steps_per_epoch:352
I1130 07:56:05.567564 140244437493568 simple_trainer.py:44] validation_steps:39
I1130 09:09:22.083172 140244437493568 simple_trainer.py:57] Model cnn_model saved to model_path: /labs/models/experiment_1_trainable_false/model_cnn_model.h5
I1130 09:09:22.084380 140244437493568 simple_trainer.py:61] model.evaluate()
I1130 09:09:22.084490 140244437493568 simple_trainer.py:62] run_id: cnn_model
I1130 09:09:22.084733 140244437493568 simple_trainer.py:63] test_data: <DatasetV1Adapter shapes: ((None, 224, 224, 3), (None, 2)), types: (tf.float32, tf.bool)>
I1130 09:09:22.084817 140244437493568 simple_trainer.py:64] steps: 2513
I1130 09:09:23.426358 140244437493568 simple_trainer.py:67] model was loaded from/labs/models/experiment_1_trainable_false/model_cnn_model.h5
I1130 09:09:23.426590 140244437493568 layer_utils.py:165] Model: "sequential_4"
I1130 09:09:23.426680 140244437493568 layer_utils.py:166] _________________________________________________________________
I1130 09:09:23.426765 140244437493568 layer_utils.py:163] Layer (type)                 Output Shape              Param #   
I1130 09:09:23.426837 140244437493568 layer_utils.py:168] =================================================================
I1130 09:09:23.427133 140244437493568 layer_utils.py:163] conv2d (Conv2D)              (None, 224, 224, 16)      448       
I1130 09:09:23.427234 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.427349 140244437493568 layer_utils.py:163] max_pooling2d (MaxPooling2D) (None, 74, 74, 16)        0         
I1130 09:09:23.427436 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.427608 140244437493568 layer_utils.py:163] conv2d_1 (Conv2D)            (None, 74, 74, 32)        4640      
I1130 09:09:23.427688 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.427837 140244437493568 layer_utils.py:163] max_pooling2d_1 (MaxPooling2 (None, 24, 24, 32)        0         
I1130 09:09:23.427949 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.428130 140244437493568 layer_utils.py:163] conv2d_2 (Conv2D)            (None, 24, 24, 64)        18496     
I1130 09:09:23.428211 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.428326 140244437493568 layer_utils.py:163] max_pooling2d_2 (MaxPooling2 (None, 8, 8, 64)          0         
I1130 09:09:23.428398 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.428505 140244437493568 layer_utils.py:163] flatten_4 (Flatten)          (None, 4096)              0         
I1130 09:09:23.428599 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.428772 140244437493568 layer_utils.py:163] dense_8 (Dense)              (None, 512)               2097664   
I1130 09:09:23.428851 140244437493568 layer_utils.py:232] _________________________________________________________________
I1130 09:09:23.429028 140244437493568 layer_utils.py:163] dense_9 (Dense)              (None, 2)                 1026      
I1130 09:09:23.429106 140244437493568 layer_utils.py:230] =================================================================
I1130 09:09:23.429809 140244437493568 layer_utils.py:242] Total params: 2,122,274
I1130 09:09:23.429920 140244437493568 layer_utils.py:243] Trainable params: 2,122,274
I1130 09:09:23.429996 140244437493568 layer_utils.py:244] Non-trainable params: 0
I1130 09:09:23.430066 140244437493568 layer_utils.py:245] _________________________________________________________________
I1130 09:11:51.263621 140244437493568 logger.py:42] Removing cache_file_dir: /labs/data/processed/experiment_1_trainable_false
I1130 09:11:52.147221 140244437493568 logger.py:44] LOGGING END. Data was saved to logs_dir: /labs/logs/experiment_1_trainable_false, models_dir: /labs/models/experiment_1_trainable_false
I1130 09:11:52.147768 140244437493568 utils.py:103] Greyscale: False
I1130 09:11:52.147903 140244437493568 utils.py:108] Number of channels: 3
